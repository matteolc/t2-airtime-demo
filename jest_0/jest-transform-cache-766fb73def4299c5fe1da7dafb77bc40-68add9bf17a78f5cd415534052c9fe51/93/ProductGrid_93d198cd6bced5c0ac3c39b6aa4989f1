'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/src/gem/t2-airtime-demo/src/view/ProductGrid.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _Card = require('material-ui/Card');
var _adminOnRest = require('admin-on-rest');
var _RaisedButton = require('material-ui/RaisedButton');var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _colors = require('material-ui/styles/colors');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const styles = {
    root: {
        display: 'flex',
        flexWrap: 'wrap',
        justifyContent: 'flex-start' },

    card: {
        margin: '0.5em' },

    currency: {
        float: 'right' } };



const ProductGrid = ({
    ids,
    isLoading,
    data,
    currentSort,
    basePath,
    rowStyle,
    showLocalPrice,
    showRetailPrice,
    showWholesalePrice,
    showTopupAction,
    topupCallback,
    productSelectedId }) =>

_react2.default.createElement('div', { style: styles.root, __source: { fileName: _jsxFileName, lineNumber: 36 }, __self: undefined },
    ids.map(id => _react2.default.createElement(_Card.Card, { key: id, style: styles.card, __source: { fileName: _jsxFileName, lineNumber: 37 }, __self: undefined },
        _react2.default.createElement(_Card.CardHeader, {
            title: _react2.default.createElement(_adminOnRest.TextField, { record:
                data[id],

                source: 'name', __source: { fileName: _jsxFileName, lineNumber: 39 }, __self: undefined }),
            subtitle: _react2.default.createElement(_adminOnRest.DateField, { record:
                data[id],

                source: 'fetchedAt', showTime: true, __source: { fileName: _jsxFileName, lineNumber: 43 }, __self: undefined }),
            avatar: _react2.default.createElement(_adminOnRest.ImageField, { record:
                data[id],

                source: 'operatorLogo', __source: { fileName: _jsxFileName, lineNumber: 47 }, __self: undefined }), __source: { fileName: _jsxFileName, lineNumber: 38 }, __self: undefined }),
        _react2.default.createElement(_Card.CardHeader, {
            style: {
                display: showRetailPrice ?
                'block' :
                'none' },

            title: _react2.default.createElement(_adminOnRest.NumberField, { record:
                data[id],

                source: 'retailPrice', options: { style: 'currency', currency: data[id].currency }, __source: { fileName: _jsxFileName, lineNumber: 57 }, __self: undefined }),
            subtitle: "Retail Price", __source: { fileName: _jsxFileName, lineNumber: 51 }, __self: undefined }),

        _react2.default.createElement(_Card.CardHeader, {
            style: {
                display: showWholesalePrice ?
                'block' :
                'none' },

            title: _react2.default.createElement(_adminOnRest.NumberField, { record:
                data[id],

                source: 'wholesalePrice', options: { style: 'currency', currency: data[id].currency }, __source: { fileName: _jsxFileName, lineNumber: 69 }, __self: undefined }),
            subtitle: "Wholesale Price", __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: undefined }),

        _react2.default.createElement(_Card.CardActions, {
                style: {
                    display: showTopupAction ?
                    'block' :
                    'none' }, __source: { fileName: _jsxFileName, lineNumber: 75 }, __self: undefined },

            _react2.default.createElement(_RaisedButton2.default, {
                label: productSelectedId === id ?
                "Selected" :
                "Select",
                backgroundColor: productSelectedId === id ? _colors.green500 : _colors.blueGrey500,


                labelColor: _colors.grey100,
                disabled: isLoading || productSelectedId === id,
                fullWidth: true,
                onClick: () => topupCallback(data[id]), __source: { fileName: _jsxFileName, lineNumber: 81 }, __self: undefined })))));





ProductGrid.defaultProps = {
    showLocalPrice: true,
    showRetailPrice: true,
    showWholesalePrice: true,
    showTopupAction: false };exports.default =


ProductGrid;